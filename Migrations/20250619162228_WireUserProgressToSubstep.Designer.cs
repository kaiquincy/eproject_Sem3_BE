// <auto-generated />
using System;
using CareerGuidancePlatform.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CareerGuidancePlatform.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250619162228_WireUserProgressToSubstep")]
    partial class WireUserProgressToSubstep
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CareerGuidancePlatform.Models.GroupSession", b =>
                {
                    b.Property<int>("GroupSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("GroupSessionId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ParticipantIds")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("GroupSessionId");

                    b.ToTable("GroupSessions");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.MeetingRequest", b =>
                {
                    b.Property<int>("MeetingRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MeetingRequestId"));

                    b.Property<int>("MenteeId")
                        .HasColumnType("int");

                    b.Property<int>("MentorId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RequestedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MeetingRequestId");

                    b.ToTable("MeetingRequests");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.Mentor", b =>
                {
                    b.Property<int>("MentorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MentorId"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Career")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Niche")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MentorId");

                    b.HasIndex("UserId");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MessageId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.PhaseSubstep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EstimatedTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ResourceTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResourceUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoadmapstepId")
                        .HasColumnType("int");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoadmapstepId");

                    b.ToTable("phase_substeps");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.RoadmapStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Career")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EstimatedTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Niche")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Phase")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResourceLinks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResourceTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RoadmapSteps");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Career")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Niche")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.UserRoadmapProgress", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId", "StepId");

                    b.HasIndex("StepId");

                    b.ToTable("UserRoadmapProgresses");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.Mentor", b =>
                {
                    b.HasOne("CareerGuidancePlatform.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.PhaseSubstep", b =>
                {
                    b.HasOne("CareerGuidancePlatform.Models.RoadmapStep", "RoadmapStep")
                        .WithMany("PhaseSubsteps")
                        .HasForeignKey("RoadmapstepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoadmapStep");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.UserRoadmapProgress", b =>
                {
                    b.HasOne("CareerGuidancePlatform.Models.PhaseSubstep", "Substep")
                        .WithMany("UserProgress")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareerGuidancePlatform.Models.User", "User")
                        .WithMany("RoadmapProgresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Substep");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.PhaseSubstep", b =>
                {
                    b.Navigation("UserProgress");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.RoadmapStep", b =>
                {
                    b.Navigation("PhaseSubsteps");
                });

            modelBuilder.Entity("CareerGuidancePlatform.Models.User", b =>
                {
                    b.Navigation("RoadmapProgresses");
                });
#pragma warning restore 612, 618
        }
    }
}
